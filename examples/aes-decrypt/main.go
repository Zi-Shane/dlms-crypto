package main

import (
	dlms_aesgcm "github.com/Zi-Shane/dlms-crypto/aesgcm"
)

/**
 * Example 1, belows are Hex String
 * plaintext:  01011000112233445566778899AABBCCDDEEFF0000065F1F0400007E1F04B0
 * key:        000102030405060708090A0B0C0D0E0F
 * nonce(IV):  4D4D4D0000BC614E01234567
 * aad:        30D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF
 * ciphertext: 801302ff8a7874133d414ced25b42534d28db0047720606b175bd52211be68
 * tag(12):    41db204d39ee6fdb8e356855
 * tag(16):    41db204d39ee6fdb8e356855f6558503
 **/

/**
 * Example 2, belows are Hex String
 * plaintext:  01011000112233445566778899AABBCCDDEEFF0000065F1F0400007E1F04B0
 * key:        811E7C1F8F6BD02E933DDA04EADF9D30
 * nonce(IV):  414243444546474800000002
 * aad:        31D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF0800000000000000020841424344454647480843545430303030300000
 * ciphertext: 3C7753636312082D3AEF50EC823C95D7C6E8EEA7C8EE51CB344AE1CE8C7EABDECE738AE4E2E46FD4DAF68F53713C58FA609582269A677478B2ACFAB13CE04542CB764F9849D79E6377B1FA7BE41BE30C8D283E105F4BCEC358EA3E2D75EC55D80FE8
 * tag(12):    5B329EB4074B1F3D547326A4
 **/

func main() {
	// The key argument should be the AES key, either 16 or 32 bytes
	// to select AES-128 or AES-256.
	// key := "000102030405060708090A0B0C0D0E0F"
	key := "811E7C1F8F6BD02E933DDA04EADF9D30"
	// ciphertext and authentication tag(12 bytes)
	ciphertext := "3C7753636312082D3AEF50EC823C95D7C6E8EEA7C8EE51CB344AE1CE8C7EABDECE738AE4E2E46FD4DAF68F53713C58FA609582269A677478B2ACFAB13CE04542CB764F9849D79E6377B1FA7BE41BE30C8D283E105F4BCEC358EA3E2D75EC55D80FE8"
	authtag := "5B329EB4074B1F3D547326A4"
	// nonce(a.k.a IV) = SystemTitle || IC
	IV := "414243444546474800000002"
	// aad
	// General-Glo/Ded-Ciphering ( SC || AK )
	// AAD := "31D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF"
	// General-Ciphering ( SC || AK || 0x08 + TransactionId || 0x08 + Originator-SystemTitle || 0x08 + Recipient-SystemTitle || date-time || other-inofrmation )
	AAD := "31D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF0800000000000000020841424344454647480843545430303030300000"

	dlms_aesgcm.ExampleNewGCMDecrypter(key, ciphertext+authtag, IV, AAD)
}
